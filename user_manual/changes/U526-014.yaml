type: api-change
title: Get rid of discriminant/index constraints

description: |
    ``DiscriminantConstraint`` and ``IndexConstraint`` nodes are now replaced
    by a single node type, ``CompositeConstraint``.

    This fixes a problem where, due to an ambiguity in the Ada grammar, we
    would incorrectly parse index constraints as being discriminant
    constraints.

    To know whether a ``CompositeConstraint`` is an index or a discriminant
    constraint, two new properties, ``p_is_index_constraint`` and
    ``p_is_discriminant_constraint`` have been exposed.

    A new assoc node type, ``CompositeConstraintAssoc``, is introduced. It can
    store a discriminant constraint assoc, as well as an index constraint.

    The consequence is that a ``CompositeConstraintAssoc`` can store a construct
    that is illegal Ada, such as in the code:

    .. code:: ada

        A : My_Type (Disc => 12 .. 15)

    This currently won't be caught by LAL, and is in-line with other such
    decisions where we parse a superset of Ada syntax.

date: 2021-08-06
