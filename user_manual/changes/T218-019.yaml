type: new-feature
title: Expected type information in name resolution
description: |
    Until now, users have been able to query the type of Ada expressions with
    Libadalang using the ``P_Expression_Type`` property. However, the semantics
    of that proprety where not clearly defined and would sometimes return the
    expected type of an expression, and sometimes its actual type. This change
    fixes this issue by providing a new property ``P_Expected_Expression_Type``
    which can be used to query the expected type of an Ada expression, and by
    making sure that ``P_Expression_Type`` always returns the actual type of
    the expression.
    Consider the following snippet of Ada code:

    .. code:: ada

        procedure Foo (X : Integer) is null;

        ...

        Foo (2);
        --   ^

    Calling ``P_Expression_Type`` on the node representing ``2`` will return
    ``universal_int_type`` like it previously did. However invoking the new
    ``P_Expected_Expression_Type`` property on that node will return
    ``Integer``.

    Note that existing user code that uses name resolution may be affected by
    this change, even code that didn't use ``P_Expression_Type``. This is
    because the whole internal name resolution mechanism was reworked to work
    with both the expected type and actual type information. The overall
    impact should be positive, in particular with respect to timeouts.
date: 2022-03-16
