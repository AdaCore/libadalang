CompilationUnitList[1:1-17:11]
|  CompilationUnit[1:1-2:9]
|  |prelude:
|  |  AdaNodeList[1:1-1:1]: <empty list>
|  |body:
|  |  LibraryItem[1:1-2:9]
|  |  |has_private:
|  |  |  PrivateAbsent[1:1-1:1]
|  |  |item:
|  |  |  PackageDecl[1:1-2:9]
|  |  |  |package_name:
|  |  |  |  Id[1:9-1:12]: Foo
|  |  |  |aspects: <null>
|  |  |  |public_part:
|  |  |  |  PublicPart[1:15-2:1]
|  |  |  |  |decls:
|  |  |  |  |  AdaNodeList[1:15-1:15]: <empty list>
|  |  |  |private_part: <null>
|  |  |  |end_name:
|  |  |  |  Id[2:5-2:8]: Foo
|  |pragmas:
|  |  PragmaNodeList[2:9-2:9]: <empty list>
|  CompilationUnit[4:1-5:13]
|  |prelude:
|  |  AdaNodeList[2:9-2:9]: <empty list>
|  |body:
|  |  LibraryItem[4:1-5:13]
|  |  |has_private:
|  |  |  PrivateAbsent[2:9-2:9]
|  |  |item:
|  |  |  PackageDecl[4:1-5:13]
|  |  |  |package_name:
|  |  |  |  DottedName[4:9-4:16]
|  |  |  |  |prefix:
|  |  |  |  |  Id[4:9-4:12]: Foo
|  |  |  |  |suffix:
|  |  |  |  |  Id[4:13-4:16]: Bar
|  |  |  |aspects: <null>
|  |  |  |public_part:
|  |  |  |  PublicPart[4:19-5:1]
|  |  |  |  |decls:
|  |  |  |  |  AdaNodeList[4:19-4:19]: <empty list>
|  |  |  |private_part: <null>
|  |  |  |end_name:
|  |  |  |  DottedName[5:5-5:12]
|  |  |  |  |prefix:
|  |  |  |  |  Id[5:5-5:8]: Foo
|  |  |  |  |suffix:
|  |  |  |  |  Id[5:9-5:12]: Bar
|  |pragmas:
|  |  PragmaNodeList[5:13-5:13]: <empty list>
|  CompilationUnit[7:1-8:17]
|  |prelude:
|  |  AdaNodeList[5:13-5:13]: <empty list>
|  |body:
|  |  LibraryItem[7:1-8:17]
|  |  |has_private:
|  |  |  PrivateAbsent[5:13-5:13]
|  |  |item:
|  |  |  PackageDecl[7:1-8:17]
|  |  |  |package_name:
|  |  |  |  DottedName[7:9-7:20]
|  |  |  |  |prefix:
|  |  |  |  |  DottedName[7:9-7:16]
|  |  |  |  |  |prefix:
|  |  |  |  |  |  Id[7:9-7:12]: Foo
|  |  |  |  |  |suffix:
|  |  |  |  |  |  Id[7:13-7:16]: Bar
|  |  |  |  |suffix:
|  |  |  |  |  Id[7:17-7:20]: Baz
|  |  |  |aspects: <null>
|  |  |  |public_part:
|  |  |  |  PublicPart[7:23-8:1]
|  |  |  |  |decls:
|  |  |  |  |  AdaNodeList[7:23-7:23]: <empty list>
|  |  |  |private_part: <null>
|  |  |  |end_name:
|  |  |  |  DottedName[8:5-8:16]
|  |  |  |  |prefix:
|  |  |  |  |  DottedName[8:5-8:12]
|  |  |  |  |  |prefix:
|  |  |  |  |  |  Id[8:5-8:8]: Foo
|  |  |  |  |  |suffix:
|  |  |  |  |  |  Id[8:9-8:12]: Bar
|  |  |  |  |suffix:
|  |  |  |  |  Id[8:13-8:16]: Baz
|  |pragmas:
|  |  PragmaNodeList[8:17-8:17]: <empty list>
|  CompilationUnit[10:1-11:7]
|  |prelude:
|  |  AdaNodeList[8:17-8:17]: <empty list>
|  |body:
|  |  LibraryItem[10:1-11:7]
|  |  |has_private:
|  |  |  PrivateAbsent[8:17-8:17]
|  |  |item:
|  |  |  PackageDecl[10:1-11:7]
|  |  |  |package_name:
|  |  |  |  Id[10:9-10:10]: A
|  |  |  |aspects: <null>
|  |  |  |public_part:
|  |  |  |  PublicPart[10:13-11:1]
|  |  |  |  |decls:
|  |  |  |  |  AdaNodeList[10:13-10:13]: <empty list>
|  |  |  |private_part: <null>
|  |  |  |end_name:
|  |  |  |  Id[11:5-11:6]: A
|  |pragmas:
|  |  PragmaNodeList[11:7-11:7]: <empty list>
|  CompilationUnit[13:1-14:9]
|  |prelude:
|  |  AdaNodeList[11:7-11:7]: <empty list>
|  |body:
|  |  LibraryItem[13:1-14:9]
|  |  |has_private:
|  |  |  PrivateAbsent[11:7-11:7]
|  |  |item:
|  |  |  PackageDecl[13:1-14:9]
|  |  |  |package_name:
|  |  |  |  DottedName[13:9-13:12]
|  |  |  |  |prefix:
|  |  |  |  |  Id[13:9-13:10]: A
|  |  |  |  |suffix:
|  |  |  |  |  Id[13:11-13:12]: B
|  |  |  |aspects: <null>
|  |  |  |public_part:
|  |  |  |  PublicPart[13:15-14:1]
|  |  |  |  |decls:
|  |  |  |  |  AdaNodeList[13:15-13:15]: <empty list>
|  |  |  |private_part: <null>
|  |  |  |end_name:
|  |  |  |  DottedName[14:5-14:8]
|  |  |  |  |prefix:
|  |  |  |  |  Id[14:5-14:6]: A
|  |  |  |  |suffix:
|  |  |  |  |  Id[14:7-14:8]: B
|  |pragmas:
|  |  PragmaNodeList[14:9-14:9]: <empty list>
|  CompilationUnit[16:1-17:11]
|  |prelude:
|  |  AdaNodeList[14:9-14:9]: <empty list>
|  |body:
|  |  LibraryItem[16:1-17:11]
|  |  |has_private:
|  |  |  PrivateAbsent[14:9-14:9]
|  |  |item:
|  |  |  PackageDecl[16:1-17:11]
|  |  |  |package_name:
|  |  |  |  DottedName[16:9-16:14]
|  |  |  |  |prefix:
|  |  |  |  |  DottedName[16:9-16:12]
|  |  |  |  |  |prefix:
|  |  |  |  |  |  Id[16:9-16:10]: A
|  |  |  |  |  |suffix:
|  |  |  |  |  |  Id[16:11-16:12]: B
|  |  |  |  |suffix:
|  |  |  |  |  Id[16:13-16:14]: C
|  |  |  |aspects: <null>
|  |  |  |public_part:
|  |  |  |  PublicPart[16:17-17:1]
|  |  |  |  |decls:
|  |  |  |  |  AdaNodeList[16:17-16:17]: <empty list>
|  |  |  |private_part: <null>
|  |  |  |end_name:
|  |  |  |  DottedName[17:5-17:10]
|  |  |  |  |prefix:
|  |  |  |  |  DottedName[17:5-17:8]
|  |  |  |  |  |prefix:
|  |  |  |  |  |  Id[17:5-17:6]: A
|  |  |  |  |  |suffix:
|  |  |  |  |  |  Id[17:7-17:8]: B
|  |  |  |  |suffix:
|  |  |  |  |  Id[17:9-17:10]: C
|  |pragmas:
|  |  PragmaNodeList[17:11-17:11]: <empty list>

==== Dumping lexical environments ====
$root = LexEnv(Primary, Parent=null):
    <empty>

@2 = LexEnv(Primary, Parent=null, Node=<PackageDecl ["Standard"] 1:1-121:14>):
    'a': [<EnumLiteralDecl ["'A'"] 20:22-20:25>, <EnumLiteralDecl ["'A'"] 21:27-21:30>, <EnumLiteralDecl ["'A'"] 22:32-22:35>]
    a: [<PackageDecl ["A"] 10:1-11:7>]
    ascii: [<PackageDecl ["ASCII"] 23:3-103:13>]
    boolean: [<TypeDecl ["Boolean"] 3:3-3:33>]
    character: [<TypeDecl ["Character"] 20:3-20:27>]
    constraint_error: [<ExceptionDecl ["Constraint_Error"] 115:3-115:32>]
    duration: [<TypeDecl ["Duration"] 111:3-113:42>]
    false: [<EnumLiteralDecl ["False"] 3:20-3:25>]
    float: [<TypeDecl ["Float"] 13:3-14:51>]
    foo: [<PackageDecl ["Foo"] 1:1-2:9>]
    integer: [<TypeDecl ["Integer"] 4:3-4:54>]
    long_float: [<TypeDecl ["Long_Float"] 15:3-16:73>]
    long_integer: [<TypeDecl ["Long_Integer"] 9:3-9:66>]
    long_long_float: [<TypeDecl ["Long_Long_Float"] 17:3-19:33>]
    long_long_integer: [<TypeDecl ["Long_Long_Integer"] 10:3-10:66>]
    natural: [<SubtypeDecl ["Natural"] 5:3-5:57>]
    positive: [<SubtypeDecl ["Positive"] 6:3-6:57>]
    program_error: [<ExceptionDecl ["Program_Error"] 116:3-116:32>]
    short_float: [<TypeDecl ["Short_Float"] 11:3-12:51>]
    short_integer: [<TypeDecl ["Short_Integer"] 8:3-8:66>]
    short_short_integer: [<TypeDecl ["Short_Short_Integer"] 7:3-7:64>]
    storage_error: [<ExceptionDecl ["Storage_Error"] 117:3-117:32>]
    string: [<TypeDecl ["String"] 104:3-104:57>]
    tasking_error: [<ExceptionDecl ["Tasking_Error"] 118:3-118:32>]
    true: [<EnumLiteralDecl ["True"] 3:27-3:31>]
    universal_int_type_: [<TypeDecl ["Universal_Int_Type_"] 119:3-119:45>]
    universal_real_type_: [<TypeDecl ["Universal_Real_Type_"] 120:3-120:42>]
    wide_character: [<TypeDecl ["Wide_Character"] 21:3-21:32>]
    wide_string: [<TypeDecl ["Wide_String"] 106:3-107:39>]
    wide_wide_character: [<TypeDecl ["Wide_Wide_Character"] 22:3-22:37>]
    wide_wide_string: [<TypeDecl ["Wide_Wide_String"] 108:3-109:44>]

@1 = LexEnv(Primary, Empty, Parent=null):
    <empty>

@3 = LexEnv(Primary, Parent=@2, Node=<PackageDecl ["Foo"] 1:1-2:9>):
    bar: [<PackageDecl ["Foo.Bar"] 4:1-5:13>]

@4 = LexEnv(Primary, Parent=@3, Node=<PackageDecl ["Foo.Bar"] 4:1-5:13>):
    baz: [<PackageDecl ["Foo.Bar.Baz"] 7:1-8:17>]

@5 = LexEnv(Primary, Parent=@4, Node=<PackageDecl ["Foo.Bar.Baz"] 7:1-8:17>):
    <empty>

@6 = LexEnv(Primary, Parent=@2, Node=<PackageDecl ["A"] 10:1-11:7>):
    b: [<PackageDecl ["A.B"] 13:1-14:9>]

@7 = LexEnv(Primary, Parent=@6, Node=<PackageDecl ["A.B"] 13:1-14:9>):
    c: [<PackageDecl ["A.B.C"] 16:1-17:11>]

@8 = LexEnv(Primary, Parent=@7, Node=<PackageDecl ["A.B.C"] 16:1-17:11>):
    <empty>

