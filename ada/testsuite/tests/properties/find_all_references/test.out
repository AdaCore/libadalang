All references to A from a.ads:
    A (a.ads, 14:5-14:6)
    package body A is (a.adb, 1:1-12:7)
    A (a.adb, 12:5-12:6)
    with A; (b.ads, 1:1-1:8)
    function Make_Rec_1 (X : Integer) return A.Rec_Type (b.ads, 4:4-4:55)
    function Make_Rec_1 (X : Integer) return A.Rec_Type (b.adb, 2:4-2:55)
    with A; (c.adb, 1:1-1:8)
    use A; (c.adb, 1:9-1:15)
All references to X from a.ads:
    Y : Integer := X; (a.adb, 3:7-3:24)
All references to Y from a.adb:
    return Y; (a.adb, 5:7-5:16)
All references to Get_X from a.adb:
    function Get_X return Integer (a.ads, 8:4-8:33)
    Get_X (a.adb, 6:8-6:13)
All references to U from a.ads:
    return R.U; (a.adb, 10:7-10:18)
All references to Rec_Type from a.ads:
    R : Rec_Type (a.ads, 10:18-10:30)
    R : Rec_Type (a.adb, 8:18-8:30)
    function Make_Rec_1 (X : Integer) return A.Rec_Type (b.ads, 4:4-4:55)
    function Make_Rec_1 (X : Integer) return A.Rec_Type (b.adb, 2:4-2:55)
All references to X from b.adb:
    X : Integer (b.ads, 4:25-4:36)
    return (X, X); (b.adb, 4:7-4:21)
    return (X, X); (b.adb, 4:7-4:21)
All references to Make_Rec_1 from b.adb:
    function Make_Rec_1 (X : Integer) return A.Rec_Type (b.ads, 4:4-4:55)
    Make_Rec_1 (b.adb, 5:8-5:18)
    return +B.Make_Rec_1 (2); (c.adb, 6:7-6:32)
All references to Foo from c.ads:
    function Foo return Integer (c.adb, 4:4-4:31)
    Foo (c.adb, 7:8-7:11)
All references to T from d.ads:
    function Get_T return T (d.ads, 4:4-4:27)
    type T is private; (d.ads, 6:4-6:22)
    type T is null record; (d.ads, 8:4-8:26)
    function Get_T return T (d.adb, 2:4-2:27)
All references to "+" from a.ads:
    function "+" (R : Rec_Type) return Integer (a.adb, 8:4-8:46)
    "+" (a.adb, 11:8-11:11)
    return +B.Make_Rec_1 (2); (c.adb, 6:7-6:32)
Done
