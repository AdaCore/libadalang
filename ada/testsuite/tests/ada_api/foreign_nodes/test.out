===================
== Reloading Pkg ==
===================
## Pkg ##
@2 = LexEnv(Primary, Parent=null, Node=<PackageDecl ["Standard"] 1:1-121:14>):
  Referenced: <PackageDecl ["Standard"] 1:1-121:14>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Boolean"] 3:3-3:33>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Integer"] 4:3-4:54>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Short_Short_Integer"] 7:3-7:64>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Short_Integer"] 8:3-8:66>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Long_Integer"] 9:3-9:66>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Long_Long_Integer"] 10:3-10:66>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Short_Float"] 11:3-12:51>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Float"] 13:3-14:51>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Long_Float"] 15:3-16:73>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Long_Long_Float"] 17:3-19:33>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Character"] 20:3-20:27>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Wide_Character"] 21:3-21:32>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Wide_Wide_Character"] 22:3-22:37>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["String"] 104:3-104:57>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Wide_String"] 106:3-107:39>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Wide_Wide_String"] 108:3-109:44>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Duration"] 111:3-113:42>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Universal_Int_Type_"] 119:3-119:45>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Universal_Real_Type_"] 120:3-120:42>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
    'a': [<EnumLiteralDecl ["'A'"] 20:22-20:25>, <EnumLiteralDecl ["'A'"] 21:27-21:30>, <EnumLiteralDecl ["'A'"] 22:32-22:35>]
    ascii: [<PackageDecl ["ASCII"] 23:3-103:13>]
    boolean: [<TypeDecl ["Boolean"] 3:3-3:33>]
    character: [<TypeDecl ["Character"] 20:3-20:27>]
    constraint_error: [<ExceptionDecl ["Constraint_Error"] 115:3-115:32>]
    duration: [<TypeDecl ["Duration"] 111:3-113:42>]
    false: [<EnumLiteralDecl ["False"] 3:20-3:25>]
    float: [<TypeDecl ["Float"] 13:3-14:51>]
    integer: [<TypeDecl ["Integer"] 4:3-4:54>]
    long_float: [<TypeDecl ["Long_Float"] 15:3-16:73>]
    long_integer: [<TypeDecl ["Long_Integer"] 9:3-9:66>]
    long_long_float: [<TypeDecl ["Long_Long_Float"] 17:3-19:33>]
    long_long_integer: [<TypeDecl ["Long_Long_Integer"] 10:3-10:66>]
    natural: [<SubtypeDecl ["Natural"] 5:3-5:57>]
    pkg: [<PackageDecl ["Pkg"] 1:1-3:9>]
    positive: [<SubtypeDecl ["Positive"] 6:3-6:57>]
    program_error: [<ExceptionDecl ["Program_Error"] 116:3-116:32>]
    short_float: [<TypeDecl ["Short_Float"] 11:3-12:51>]
    short_integer: [<TypeDecl ["Short_Integer"] 8:3-8:66>]
    short_short_integer: [<TypeDecl ["Short_Short_Integer"] 7:3-7:64>]
    storage_error: [<ExceptionDecl ["Storage_Error"] 117:3-117:32>]
    string: [<TypeDecl ["String"] 104:3-104:57>]
    tasking_error: [<ExceptionDecl ["Tasking_Error"] 118:3-118:32>]
    true: [<EnumLiteralDecl ["True"] 3:27-3:31>]
    universal_int_type_: [<TypeDecl ["Universal_Int_Type_"] 119:3-119:45>]
    universal_real_type_: [<TypeDecl ["Universal_Real_Type_"] 120:3-120:42>]
    wide_character: [<TypeDecl ["Wide_Character"] 21:3-21:32>]
    wide_string: [<TypeDecl ["Wide_String"] 106:3-107:39>]
    wide_wide_character: [<TypeDecl ["Wide_Wide_Character"] 22:3-22:37>]
    wide_wide_string: [<TypeDecl ["Wide_Wide_String"] 108:3-109:44>]

@1 = LexEnv(Primary, Empty, Parent=null):
    <empty>

@3 = LexEnv(Primary, Parent=@2, Node=<PackageDecl ["Pkg"] 1:1-3:9>):
  Referenced: <PackageDecl ["Pkg"] 1:1-3:9>: LexEnv(Primary, Node=<CompilationUnit 1:1-3:9>)
    child: [<PackageDecl ["Pkg.Child"] 1:1-3:15>]
    p1: [<NullSubpDecl ["P1"] 2:4-2:25>]

@4 = LexEnv(Primary, Parent=@3, Node=<NullSubpDecl ["P1"] 2:4-2:25>):
    <empty>

## Child ##
@2 = LexEnv(Primary, Parent=null, Node=<PackageDecl ["Standard"] 1:1-121:14>):
  Referenced: <PackageDecl ["Standard"] 1:1-121:14>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Boolean"] 3:3-3:33>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Integer"] 4:3-4:54>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Short_Short_Integer"] 7:3-7:64>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Short_Integer"] 8:3-8:66>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Long_Integer"] 9:3-9:66>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Long_Long_Integer"] 10:3-10:66>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Short_Float"] 11:3-12:51>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Float"] 13:3-14:51>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Long_Float"] 15:3-16:73>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Long_Long_Float"] 17:3-19:33>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Character"] 20:3-20:27>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Wide_Character"] 21:3-21:32>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Wide_Wide_Character"] 22:3-22:37>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["String"] 104:3-104:57>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Wide_String"] 106:3-107:39>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Wide_Wide_String"] 108:3-109:44>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Duration"] 111:3-113:42>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Universal_Int_Type_"] 119:3-119:45>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Universal_Real_Type_"] 120:3-120:42>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
    'a': [<EnumLiteralDecl ["'A'"] 20:22-20:25>, <EnumLiteralDecl ["'A'"] 21:27-21:30>, <EnumLiteralDecl ["'A'"] 22:32-22:35>]
    ascii: [<PackageDecl ["ASCII"] 23:3-103:13>]
    boolean: [<TypeDecl ["Boolean"] 3:3-3:33>]
    character: [<TypeDecl ["Character"] 20:3-20:27>]
    constraint_error: [<ExceptionDecl ["Constraint_Error"] 115:3-115:32>]
    duration: [<TypeDecl ["Duration"] 111:3-113:42>]
    false: [<EnumLiteralDecl ["False"] 3:20-3:25>]
    float: [<TypeDecl ["Float"] 13:3-14:51>]
    integer: [<TypeDecl ["Integer"] 4:3-4:54>]
    long_float: [<TypeDecl ["Long_Float"] 15:3-16:73>]
    long_integer: [<TypeDecl ["Long_Integer"] 9:3-9:66>]
    long_long_float: [<TypeDecl ["Long_Long_Float"] 17:3-19:33>]
    long_long_integer: [<TypeDecl ["Long_Long_Integer"] 10:3-10:66>]
    natural: [<SubtypeDecl ["Natural"] 5:3-5:57>]
    pkg: [<PackageDecl ["Pkg"] 1:1-3:9>]
    positive: [<SubtypeDecl ["Positive"] 6:3-6:57>]
    program_error: [<ExceptionDecl ["Program_Error"] 116:3-116:32>]
    short_float: [<TypeDecl ["Short_Float"] 11:3-12:51>]
    short_integer: [<TypeDecl ["Short_Integer"] 8:3-8:66>]
    short_short_integer: [<TypeDecl ["Short_Short_Integer"] 7:3-7:64>]
    storage_error: [<ExceptionDecl ["Storage_Error"] 117:3-117:32>]
    string: [<TypeDecl ["String"] 104:3-104:57>]
    tasking_error: [<ExceptionDecl ["Tasking_Error"] 118:3-118:32>]
    true: [<EnumLiteralDecl ["True"] 3:27-3:31>]
    universal_int_type_: [<TypeDecl ["Universal_Int_Type_"] 119:3-119:45>]
    universal_real_type_: [<TypeDecl ["Universal_Real_Type_"] 120:3-120:42>]
    wide_character: [<TypeDecl ["Wide_Character"] 21:3-21:32>]
    wide_string: [<TypeDecl ["Wide_String"] 106:3-107:39>]
    wide_wide_character: [<TypeDecl ["Wide_Wide_Character"] 22:3-22:37>]
    wide_wide_string: [<TypeDecl ["Wide_Wide_String"] 108:3-109:44>]

@1 = LexEnv(Primary, Empty, Parent=null):
    <empty>

@4 = LexEnv(Primary, Parent=@3, Node=<PackageDecl ["Pkg.Child"] 1:1-3:15>):
  Referenced: <PackageDecl ["Pkg.Child"] 1:1-3:15>: LexEnv(Primary, Node=<CompilationUnit 1:1-3:15>)
    p2: [<NullSubpDecl ["P2"] 2:4-2:25>]

@3 = LexEnv(Primary, Parent=@2, Node=<PackageDecl ["Pkg"] 1:1-3:9>):
  Referenced: <PackageDecl ["Pkg"] 1:1-3:9>: LexEnv(Primary, Node=<CompilationUnit 1:1-3:9>)
    child: [<PackageDecl ["Pkg.Child"] 1:1-3:15>]
    p1: [<NullSubpDecl ["P1"] 2:4-2:25>]

@2 = LexEnv(Primary, Parent=null, Node=<PackageDecl ["Standard"] 1:1-121:14>):
  Referenced: <PackageDecl ["Standard"] 1:1-121:14>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Boolean"] 3:3-3:33>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Integer"] 4:3-4:54>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Short_Short_Integer"] 7:3-7:64>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Short_Integer"] 8:3-8:66>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Long_Integer"] 9:3-9:66>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Long_Long_Integer"] 10:3-10:66>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Short_Float"] 11:3-12:51>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Float"] 13:3-14:51>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Long_Float"] 15:3-16:73>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Long_Long_Float"] 17:3-19:33>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Character"] 20:3-20:27>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Wide_Character"] 21:3-21:32>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Wide_Wide_Character"] 22:3-22:37>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["String"] 104:3-104:57>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Wide_String"] 106:3-107:39>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Wide_Wide_String"] 108:3-109:44>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Duration"] 111:3-113:42>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Universal_Int_Type_"] 119:3-119:45>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Universal_Real_Type_"] 120:3-120:42>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
    'a': [<EnumLiteralDecl ["'A'"] 20:22-20:25>, <EnumLiteralDecl ["'A'"] 21:27-21:30>, <EnumLiteralDecl ["'A'"] 22:32-22:35>]
    ascii: [<PackageDecl ["ASCII"] 23:3-103:13>]
    boolean: [<TypeDecl ["Boolean"] 3:3-3:33>]
    character: [<TypeDecl ["Character"] 20:3-20:27>]
    constraint_error: [<ExceptionDecl ["Constraint_Error"] 115:3-115:32>]
    duration: [<TypeDecl ["Duration"] 111:3-113:42>]
    false: [<EnumLiteralDecl ["False"] 3:20-3:25>]
    float: [<TypeDecl ["Float"] 13:3-14:51>]
    integer: [<TypeDecl ["Integer"] 4:3-4:54>]
    long_float: [<TypeDecl ["Long_Float"] 15:3-16:73>]
    long_integer: [<TypeDecl ["Long_Integer"] 9:3-9:66>]
    long_long_float: [<TypeDecl ["Long_Long_Float"] 17:3-19:33>]
    long_long_integer: [<TypeDecl ["Long_Long_Integer"] 10:3-10:66>]
    natural: [<SubtypeDecl ["Natural"] 5:3-5:57>]
    pkg: [<PackageDecl ["Pkg"] 1:1-3:9>]
    positive: [<SubtypeDecl ["Positive"] 6:3-6:57>]
    program_error: [<ExceptionDecl ["Program_Error"] 116:3-116:32>]
    short_float: [<TypeDecl ["Short_Float"] 11:3-12:51>]
    short_integer: [<TypeDecl ["Short_Integer"] 8:3-8:66>]
    short_short_integer: [<TypeDecl ["Short_Short_Integer"] 7:3-7:64>]
    storage_error: [<ExceptionDecl ["Storage_Error"] 117:3-117:32>]
    string: [<TypeDecl ["String"] 104:3-104:57>]
    tasking_error: [<ExceptionDecl ["Tasking_Error"] 118:3-118:32>]
    true: [<EnumLiteralDecl ["True"] 3:27-3:31>]
    universal_int_type_: [<TypeDecl ["Universal_Int_Type_"] 119:3-119:45>]
    universal_real_type_: [<TypeDecl ["Universal_Real_Type_"] 120:3-120:42>]
    wide_character: [<TypeDecl ["Wide_Character"] 21:3-21:32>]
    wide_string: [<TypeDecl ["Wide_String"] 106:3-107:39>]
    wide_wide_character: [<TypeDecl ["Wide_Wide_Character"] 22:3-22:37>]
    wide_wide_string: [<TypeDecl ["Wide_Wide_String"] 108:3-109:44>]

@1 = LexEnv(Primary, Empty, Parent=null):
    <empty>

@5 = LexEnv(Primary, Parent=@4, Node=<NullSubpDecl ["P2"] 2:4-2:25>):
    <empty>

=====================
== Reloading Child ==
=====================
## Pkg ##
@2 = LexEnv(Primary, Parent=null, Node=<PackageDecl ["Standard"] 1:1-121:14>):
  Referenced: <PackageDecl ["Standard"] 1:1-121:14>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Boolean"] 3:3-3:33>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Integer"] 4:3-4:54>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Short_Short_Integer"] 7:3-7:64>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Short_Integer"] 8:3-8:66>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Long_Integer"] 9:3-9:66>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Long_Long_Integer"] 10:3-10:66>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Short_Float"] 11:3-12:51>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Float"] 13:3-14:51>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Long_Float"] 15:3-16:73>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Long_Long_Float"] 17:3-19:33>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Character"] 20:3-20:27>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Wide_Character"] 21:3-21:32>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Wide_Wide_Character"] 22:3-22:37>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["String"] 104:3-104:57>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Wide_String"] 106:3-107:39>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Wide_Wide_String"] 108:3-109:44>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Duration"] 111:3-113:42>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Universal_Int_Type_"] 119:3-119:45>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Universal_Real_Type_"] 120:3-120:42>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
    'a': [<EnumLiteralDecl ["'A'"] 20:22-20:25>, <EnumLiteralDecl ["'A'"] 21:27-21:30>, <EnumLiteralDecl ["'A'"] 22:32-22:35>]
    ascii: [<PackageDecl ["ASCII"] 23:3-103:13>]
    boolean: [<TypeDecl ["Boolean"] 3:3-3:33>]
    character: [<TypeDecl ["Character"] 20:3-20:27>]
    constraint_error: [<ExceptionDecl ["Constraint_Error"] 115:3-115:32>]
    duration: [<TypeDecl ["Duration"] 111:3-113:42>]
    false: [<EnumLiteralDecl ["False"] 3:20-3:25>]
    float: [<TypeDecl ["Float"] 13:3-14:51>]
    integer: [<TypeDecl ["Integer"] 4:3-4:54>]
    long_float: [<TypeDecl ["Long_Float"] 15:3-16:73>]
    long_integer: [<TypeDecl ["Long_Integer"] 9:3-9:66>]
    long_long_float: [<TypeDecl ["Long_Long_Float"] 17:3-19:33>]
    long_long_integer: [<TypeDecl ["Long_Long_Integer"] 10:3-10:66>]
    natural: [<SubtypeDecl ["Natural"] 5:3-5:57>]
    pkg: [<PackageDecl ["Pkg"] 1:1-3:9>]
    positive: [<SubtypeDecl ["Positive"] 6:3-6:57>]
    program_error: [<ExceptionDecl ["Program_Error"] 116:3-116:32>]
    short_float: [<TypeDecl ["Short_Float"] 11:3-12:51>]
    short_integer: [<TypeDecl ["Short_Integer"] 8:3-8:66>]
    short_short_integer: [<TypeDecl ["Short_Short_Integer"] 7:3-7:64>]
    storage_error: [<ExceptionDecl ["Storage_Error"] 117:3-117:32>]
    string: [<TypeDecl ["String"] 104:3-104:57>]
    tasking_error: [<ExceptionDecl ["Tasking_Error"] 118:3-118:32>]
    true: [<EnumLiteralDecl ["True"] 3:27-3:31>]
    universal_int_type_: [<TypeDecl ["Universal_Int_Type_"] 119:3-119:45>]
    universal_real_type_: [<TypeDecl ["Universal_Real_Type_"] 120:3-120:42>]
    wide_character: [<TypeDecl ["Wide_Character"] 21:3-21:32>]
    wide_string: [<TypeDecl ["Wide_String"] 106:3-107:39>]
    wide_wide_character: [<TypeDecl ["Wide_Wide_Character"] 22:3-22:37>]
    wide_wide_string: [<TypeDecl ["Wide_Wide_String"] 108:3-109:44>]

@1 = LexEnv(Primary, Empty, Parent=null):
    <empty>

@3 = LexEnv(Primary, Parent=@2, Node=<PackageDecl ["Pkg"] 1:1-3:9>):
  Referenced: <PackageDecl ["Pkg"] 1:1-3:9>: LexEnv(Primary, Node=<CompilationUnit 1:1-3:9>)
    child: [<PackageDecl ["Pkg.Child"] 1:1-3:15>]
    p1: [<NullSubpDecl ["P1"] 2:4-2:25>]

@4 = LexEnv(Primary, Parent=@3, Node=<NullSubpDecl ["P1"] 2:4-2:25>):
    <empty>

## Child ##
@2 = LexEnv(Primary, Parent=null, Node=<PackageDecl ["Standard"] 1:1-121:14>):
  Referenced: <PackageDecl ["Standard"] 1:1-121:14>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Boolean"] 3:3-3:33>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Integer"] 4:3-4:54>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Short_Short_Integer"] 7:3-7:64>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Short_Integer"] 8:3-8:66>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Long_Integer"] 9:3-9:66>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Long_Long_Integer"] 10:3-10:66>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Short_Float"] 11:3-12:51>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Float"] 13:3-14:51>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Long_Float"] 15:3-16:73>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Long_Long_Float"] 17:3-19:33>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Character"] 20:3-20:27>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Wide_Character"] 21:3-21:32>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Wide_Wide_Character"] 22:3-22:37>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["String"] 104:3-104:57>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Wide_String"] 106:3-107:39>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Wide_Wide_String"] 108:3-109:44>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Duration"] 111:3-113:42>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Universal_Int_Type_"] 119:3-119:45>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Universal_Real_Type_"] 120:3-120:42>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
    'a': [<EnumLiteralDecl ["'A'"] 20:22-20:25>, <EnumLiteralDecl ["'A'"] 21:27-21:30>, <EnumLiteralDecl ["'A'"] 22:32-22:35>]
    ascii: [<PackageDecl ["ASCII"] 23:3-103:13>]
    boolean: [<TypeDecl ["Boolean"] 3:3-3:33>]
    character: [<TypeDecl ["Character"] 20:3-20:27>]
    constraint_error: [<ExceptionDecl ["Constraint_Error"] 115:3-115:32>]
    duration: [<TypeDecl ["Duration"] 111:3-113:42>]
    false: [<EnumLiteralDecl ["False"] 3:20-3:25>]
    float: [<TypeDecl ["Float"] 13:3-14:51>]
    integer: [<TypeDecl ["Integer"] 4:3-4:54>]
    long_float: [<TypeDecl ["Long_Float"] 15:3-16:73>]
    long_integer: [<TypeDecl ["Long_Integer"] 9:3-9:66>]
    long_long_float: [<TypeDecl ["Long_Long_Float"] 17:3-19:33>]
    long_long_integer: [<TypeDecl ["Long_Long_Integer"] 10:3-10:66>]
    natural: [<SubtypeDecl ["Natural"] 5:3-5:57>]
    pkg: [<PackageDecl ["Pkg"] 1:1-3:9>]
    positive: [<SubtypeDecl ["Positive"] 6:3-6:57>]
    program_error: [<ExceptionDecl ["Program_Error"] 116:3-116:32>]
    short_float: [<TypeDecl ["Short_Float"] 11:3-12:51>]
    short_integer: [<TypeDecl ["Short_Integer"] 8:3-8:66>]
    short_short_integer: [<TypeDecl ["Short_Short_Integer"] 7:3-7:64>]
    storage_error: [<ExceptionDecl ["Storage_Error"] 117:3-117:32>]
    string: [<TypeDecl ["String"] 104:3-104:57>]
    tasking_error: [<ExceptionDecl ["Tasking_Error"] 118:3-118:32>]
    true: [<EnumLiteralDecl ["True"] 3:27-3:31>]
    universal_int_type_: [<TypeDecl ["Universal_Int_Type_"] 119:3-119:45>]
    universal_real_type_: [<TypeDecl ["Universal_Real_Type_"] 120:3-120:42>]
    wide_character: [<TypeDecl ["Wide_Character"] 21:3-21:32>]
    wide_string: [<TypeDecl ["Wide_String"] 106:3-107:39>]
    wide_wide_character: [<TypeDecl ["Wide_Wide_Character"] 22:3-22:37>]
    wide_wide_string: [<TypeDecl ["Wide_Wide_String"] 108:3-109:44>]

@1 = LexEnv(Primary, Empty, Parent=null):
    <empty>

@4 = LexEnv(Primary, Parent=@3, Node=<PackageDecl ["Pkg.Child"] 1:1-3:15>):
  Referenced: <PackageDecl ["Pkg.Child"] 1:1-3:15>: LexEnv(Primary, Node=<CompilationUnit 1:1-3:15>)
    p2: [<NullSubpDecl ["P2"] 2:4-2:25>]

@3 = LexEnv(Primary, Parent=@2, Node=<PackageDecl ["Pkg"] 1:1-3:9>):
  Referenced: <PackageDecl ["Pkg"] 1:1-3:9>: LexEnv(Primary, Node=<CompilationUnit 1:1-3:9>)
    child: [<PackageDecl ["Pkg.Child"] 1:1-3:15>]
    p1: [<NullSubpDecl ["P1"] 2:4-2:25>]

@2 = LexEnv(Primary, Parent=null, Node=<PackageDecl ["Standard"] 1:1-121:14>):
  Referenced: <PackageDecl ["Standard"] 1:1-121:14>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Boolean"] 3:3-3:33>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Integer"] 4:3-4:54>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Short_Short_Integer"] 7:3-7:64>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Short_Integer"] 8:3-8:66>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Long_Integer"] 9:3-9:66>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Long_Long_Integer"] 10:3-10:66>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Short_Float"] 11:3-12:51>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Float"] 13:3-14:51>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Long_Float"] 15:3-16:73>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Long_Long_Float"] 17:3-19:33>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Character"] 20:3-20:27>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Wide_Character"] 21:3-21:32>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Wide_Wide_Character"] 22:3-22:37>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["String"] 104:3-104:57>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Wide_String"] 106:3-107:39>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Wide_Wide_String"] 108:3-109:44>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Duration"] 111:3-113:42>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Universal_Int_Type_"] 119:3-119:45>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
  Referenced: <TypeDecl ["Universal_Real_Type_"] 120:3-120:42>: LexEnv(Primary, Node=<CompilationUnit 1:1-121:14>)
    'a': [<EnumLiteralDecl ["'A'"] 20:22-20:25>, <EnumLiteralDecl ["'A'"] 21:27-21:30>, <EnumLiteralDecl ["'A'"] 22:32-22:35>]
    ascii: [<PackageDecl ["ASCII"] 23:3-103:13>]
    boolean: [<TypeDecl ["Boolean"] 3:3-3:33>]
    character: [<TypeDecl ["Character"] 20:3-20:27>]
    constraint_error: [<ExceptionDecl ["Constraint_Error"] 115:3-115:32>]
    duration: [<TypeDecl ["Duration"] 111:3-113:42>]
    false: [<EnumLiteralDecl ["False"] 3:20-3:25>]
    float: [<TypeDecl ["Float"] 13:3-14:51>]
    integer: [<TypeDecl ["Integer"] 4:3-4:54>]
    long_float: [<TypeDecl ["Long_Float"] 15:3-16:73>]
    long_integer: [<TypeDecl ["Long_Integer"] 9:3-9:66>]
    long_long_float: [<TypeDecl ["Long_Long_Float"] 17:3-19:33>]
    long_long_integer: [<TypeDecl ["Long_Long_Integer"] 10:3-10:66>]
    natural: [<SubtypeDecl ["Natural"] 5:3-5:57>]
    pkg: [<PackageDecl ["Pkg"] 1:1-3:9>]
    positive: [<SubtypeDecl ["Positive"] 6:3-6:57>]
    program_error: [<ExceptionDecl ["Program_Error"] 116:3-116:32>]
    short_float: [<TypeDecl ["Short_Float"] 11:3-12:51>]
    short_integer: [<TypeDecl ["Short_Integer"] 8:3-8:66>]
    short_short_integer: [<TypeDecl ["Short_Short_Integer"] 7:3-7:64>]
    storage_error: [<ExceptionDecl ["Storage_Error"] 117:3-117:32>]
    string: [<TypeDecl ["String"] 104:3-104:57>]
    tasking_error: [<ExceptionDecl ["Tasking_Error"] 118:3-118:32>]
    true: [<EnumLiteralDecl ["True"] 3:27-3:31>]
    universal_int_type_: [<TypeDecl ["Universal_Int_Type_"] 119:3-119:45>]
    universal_real_type_: [<TypeDecl ["Universal_Real_Type_"] 120:3-120:42>]
    wide_character: [<TypeDecl ["Wide_Character"] 21:3-21:32>]
    wide_string: [<TypeDecl ["Wide_String"] 106:3-107:39>]
    wide_wide_character: [<TypeDecl ["Wide_Wide_Character"] 22:3-22:37>]
    wide_wide_string: [<TypeDecl ["Wide_Wide_String"] 108:3-109:44>]

@1 = LexEnv(Primary, Empty, Parent=null):
    <empty>

@5 = LexEnv(Primary, Parent=@4, Node=<NullSubpDecl ["P2"] 2:4-2:25>):
    <empty>

Done.
