CompilationUnit[1:1-10:10]
|f_prelude:
|  AdaNodeList[1:1-1:1]: <empty list>
|f_body:
|  LibraryItem[1:1-10:10]
|  |f_has_private:
|  |  PrivateAbsent[1:1-1:1]
|  |f_item:
|  |  SubpBody[1:1-10:10]
|  |  |f_overriding:
|  |  |  OverridingUnspecified[1:1-1:1]
|  |  |f_subp_spec:
|  |  |  SubpSpec[1:1-1:15]
|  |  |  |f_subp_kind:
|  |  |  |  SubpKindProcedure[1:1-1:10]
|  |  |  |f_subp_name:
|  |  |  |  DefiningName[1:11-1:15]
|  |  |  |  |f_name:
|  |  |  |  |  Id[1:11-1:15]: Test
|  |  |  |f_subp_params: <null>
|  |  |  |f_subp_returns: <null>
|  |  |f_aspects: <null>
|  |  |f_decls:
|  |  |  DeclarativePart[1:18-8:1]
|  |  |  |f_decls:
|  |  |  |  AdaNodeList[2:4-7:38]
|  |  |  |  |  GenericPackageDecl[2:4-5:10]
|  |  |  |  |  |f_formal_part:
|  |  |  |  |  |  GenericFormalPart[2:4-3:19]
|  |  |  |  |  |  |f_decls:
|  |  |  |  |  |  |  AdaNodeList[3:7-3:19]
|  |  |  |  |  |  |  |  GenericFormalObjDecl[3:7-3:19]
|  |  |  |  |  |  |  |  |f_decl:
|  |  |  |  |  |  |  |  |  ObjectDecl[3:7-3:19]
|  |  |  |  |  |  |  |  |  |f_ids:
|  |  |  |  |  |  |  |  |  |  DefiningNameList[3:7-3:8]
|  |  |  |  |  |  |  |  |  |  |  DefiningName[3:7-3:8]
|  |  |  |  |  |  |  |  |  |  |  |f_name:
|  |  |  |  |  |  |  |  |  |  |  |  Id[3:7-3:8]: T
|  |  |  |  |  |  |  |  |  |f_has_aliased:
|  |  |  |  |  |  |  |  |  |  AliasedAbsent[3:10-3:10]
|  |  |  |  |  |  |  |  |  |f_has_constant:
|  |  |  |  |  |  |  |  |  |  ConstantAbsent[3:10-3:10]
|  |  |  |  |  |  |  |  |  |f_mode:
|  |  |  |  |  |  |  |  |  |  ModeDefault[3:10-3:10]
|  |  |  |  |  |  |  |  |  |f_type_expr:
|  |  |  |  |  |  |  |  |  |  SubtypeIndication[3:11-3:18]
|  |  |  |  |  |  |  |  |  |  |f_has_not_null:
|  |  |  |  |  |  |  |  |  |  |  NotNullAbsent[3:10-3:10]
|  |  |  |  |  |  |  |  |  |  |f_name:
|  |  |  |  |  |  |  |  |  |  |  Id[3:11-3:18]: Integer
|  |  |  |  |  |  |  |  |  |  |f_constraint: <null>
|  |  |  |  |  |  |  |  |  |f_default_expr: <null>
|  |  |  |  |  |  |  |  |  |f_renaming_clause: <null>
|  |  |  |  |  |  |  |  |  |f_aspects: <null>
|  |  |  |  |  |f_package_decl:
|  |  |  |  |  |  GenericPackageInternal[4:4-5:10]
|  |  |  |  |  |  |f_package_name:
|  |  |  |  |  |  |  DefiningName[4:12-4:13]
|  |  |  |  |  |  |  |f_name:
|  |  |  |  |  |  |  |  Id[4:12-4:13]: D
|  |  |  |  |  |  |f_aspects: <null>
|  |  |  |  |  |  |f_public_part:
|  |  |  |  |  |  |  PublicPart[4:16-5:4]
|  |  |  |  |  |  |  |f_decls:
|  |  |  |  |  |  |  |  AdaNodeList[4:16-4:16]: <empty list>
|  |  |  |  |  |  |f_private_part: <null>
|  |  |  |  |  |  |f_end_name:
|  |  |  |  |  |  |  EndName[5:8-5:9]
|  |  |  |  |  |  |  |f_name:
|  |  |  |  |  |  |  |  Id[5:8-5:9]: D
|  |  |  |  |  GenericPackageInstantiation[7:4-7:38]
|  |  |  |  |  |f_name:
|  |  |  |  |  |  DefiningName[7:12-7:18]
|  |  |  |  |  |  |f_name:
|  |  |  |  |  |  |  Id[7:12-7:18]: D_Inst
|  |  |  |  |  |f_generic_pkg_name:
|  |  |  |  |  |  Id[7:26-7:27]: D
|  |  |  |  |  |f_params:
|  |  |  |  |  |  AssocList[7:29-7:36]
|  |  |  |  |  |  |  ParamAssoc[7:29-7:36]
|  |  |  |  |  |  |  |f_designator:
|  |  |  |  |  |  |  |  Id[7:29-7:30]: T
|  |  |  |  |  |  |  |f_r_expr:
|  |  |  |  |  |  |  |  Int[7:34-7:36]: 12
|  |  |  |  |  |f_aspects: <null>
|  |  |f_stmts:
|  |  |  HandledStmts[8:6-10:1]
|  |  |  |f_stmts:
|  |  |  |  StmtList[9:4-9:9]
|  |  |  |  |  NullStmt[9:4-9:9]
|  |  |  |f_exceptions:
|  |  |  |  AdaNodeList[9:8-9:8]: <empty list>
|  |  |f_end_name:
|  |  |  EndName[10:5-10:9]
|  |  |  |f_name:
|  |  |  |  Id[10:5-10:9]: Test
|f_pragmas:
|  PragmaNodeList[10:10-10:10]: <empty list>

==== Dumping lexical environments ====
$root = LexEnv(Static_Primary, Parent=null):
    standard: [<PackageDecl ["Standard"] __standard:1:1-123:14>]

@2 = LexEnv(Static_Primary, Parent=@1, Node=<SubpBody ["Test"] test.adb:1:1-10:10>):
  Referenced: <SubpBody ["Test"] test.adb:1:1-10:10>: LexEnv(Static_Primary, Node=<CompilationUnit test.adb:1:1-10:10>)
  Referenced: <SubpBody ["Test"] test.adb:1:1-10:10>: LexEnv(Static_Primary, Node=<CompilationUnit test.adb:1:1-10:10>)
    d: [<GenericPackageDecl ["D"] test.adb:2:4-5:10>]
    d_inst: [<GenericPackageInstantiation ["D_Inst"] test.adb:7:4-7:38>]

@1 = LexEnv(Static_Primary, Parent=$root, Node=<PackageDecl ["Standard"] __standard:1:1-123:14>):
    'a': [<EnumLiteralDecl ["'A'"] __standard:21:22-21:25>, <EnumLiteralDecl ["'A'"] __standard:22:27-22:30>, <EnumLiteralDecl ["'A'"] __standard:23:32-23:35>]
    ascii: [<PackageDecl ["ASCII"] __standard:24:3-104:13>]
    boolean: [<TypeDecl ["Boolean"] __standard:3:3-3:33>]
    character: [<TypeDecl ["Character"] __standard:21:3-21:27>]
    constraint_error: [<ExceptionDecl ["Constraint_Error"] __standard:116:3-116:32>]
    duration: [<TypeDecl ["Duration"] __standard:112:3-114:42>]
    false: [<EnumLiteralDecl ["False"] __standard:3:20-3:25>]
    float: [<TypeDecl ["Float"] __standard:14:3-15:51>]
    integer: [<TypeDecl ["Integer"] __standard:4:3-4:54>]
    long_float: [<TypeDecl ["Long_Float"] __standard:16:3-17:73>]
    long_integer: [<TypeDecl ["Long_Integer"] __standard:9:3-9:69>]
    long_long_float: [<TypeDecl ["Long_Long_Float"] __standard:18:3-20:33>]
    long_long_integer: [<TypeDecl ["Long_Long_Integer"] __standard:10:3-10:69>]
    long_long_long_integer: [<TypeDecl ["Long_Long_Long_Integer"] __standard:11:3-11:71>]
    natural: [<SubtypeDecl ["Natural"] __standard:5:3-5:57>]
    numeric_error: [<ExceptionDecl ["Numeric_Error"] __standard:117:3-117:32>]
    positive: [<SubtypeDecl ["Positive"] __standard:6:3-6:57>]
    program_error: [<ExceptionDecl ["Program_Error"] __standard:118:3-118:32>]
    short_float: [<TypeDecl ["Short_Float"] __standard:12:3-13:51>]
    short_integer: [<TypeDecl ["Short_Integer"] __standard:8:3-8:69>]
    short_short_integer: [<TypeDecl ["Short_Short_Integer"] __standard:7:3-7:67>]
    storage_error: [<ExceptionDecl ["Storage_Error"] __standard:119:3-119:32>]
    string: [<TypeDecl ["String"] __standard:105:3-105:57>]
    tasking_error: [<ExceptionDecl ["Tasking_Error"] __standard:120:3-120:32>]
    test: [<SubpBody ["Test"] test.adb:1:1-10:10>]
    true: [<EnumLiteralDecl ["True"] __standard:3:27-3:31>]
    universal_int_type_: [<TypeDecl ["Universal_Int_Type_"] __standard:121:3-121:45>]
    universal_real_type_: [<TypeDecl ["Universal_Real_Type_"] __standard:122:3-122:42>]
    wide_character: [<TypeDecl ["Wide_Character"] __standard:22:3-22:32>]
    wide_string: [<TypeDecl ["Wide_String"] __standard:107:3-108:39>]
    wide_wide_character: [<TypeDecl ["Wide_Wide_Character"] __standard:23:3-23:37>]
    wide_wide_string: [<TypeDecl ["Wide_Wide_String"] __standard:109:3-110:44>]

$root = LexEnv(Static_Primary, Parent=null):
    standard: [<PackageDecl ["Standard"] __standard:1:1-123:14>]

@3 = LexEnv(Static_Primary, Parent=@2, Node=<GenericPackageDecl ["D"] test.adb:2:4-5:10>):
    t: [<ObjectDecl ["T"] test.adb:3:7-3:19>]

@4 = LexEnv(Static_Primary, Parent=@3, Node=<GenericPackageInternal ["D"] test.adb:4:4-5:10>):
    <empty>

@5 = LexEnv(Static_Primary, Parent=@2, Node=<GenericPackageInstantiation ["D_Inst"] test.adb:7:4-7:38>):
    <empty>

