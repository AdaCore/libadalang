Analyzing testop.adb
####################

Resolving xrefs for node <IfStmt testop.adb:14:4-16:11>
*******************************************************

Expr: <BinOp testop.adb:14:7-14:47>
  type:          <ConcreteTypeDecl ["Boolean"] in Standard>
  expected type: <ConcreteTypeDecl ["Boolean"] in Standard>
Expr: <BinOp testop.adb:14:7-14:25>
  type:          <ConcreteTypeDecl ["Boolean"] in Standard>
  expected type: <ConcreteTypeDecl ["Boolean"] in Standard>
Expr: <RelationOp testop.adb:14:7-14:12>
  type:          <ConcreteTypeDecl ["Boolean"] in Standard>
  expected type: <ConcreteTypeDecl ["Boolean"] in Standard>
Expr: <Id "A" testop.adb:14:7-14:8>
  references:    <DefiningName "A" testop.adb:8:4-8:5>
  type:          <ConcreteTypeDecl ["Integer"] in Standard>
  expected type: <ConcreteTypeDecl ["Integer"] in Standard>
Expr: <OpLt "<" testop.adb:14:9-14:10>
  references:    None
  type:          None
  expected type: None
Expr: <Id "B" testop.adb:14:11-14:12>
  references:    <DefiningName "B" testop.adb:8:7-8:8>
  type:          <ConcreteTypeDecl ["Integer"] in Standard>
  expected type: <ConcreteTypeDecl ["Integer"] in Standard>
Expr: <OpAndThen "and then" testop.adb:14:13-14:21>
  references:    None
  type:          None
  expected type: None
Expr: <Id "Foo" testop.adb:14:22-14:25>
  references:    <DefiningName "Foo" testop.adb:12:4-12:7>
  type:          <ConcreteTypeDecl ["Boolean"] in Standard>
  expected type: <ConcreteTypeDecl ["Boolean"] in Standard>
Expr: <OpOrElse "or else" testop.adb:14:26-14:33>
  references:    None
  type:          None
  expected type: None
Expr: <ParenExpr testop.adb:14:34-14:47>
  type:          <ConcreteTypeDecl ["Boolean"] in Standard>
  expected type: <ConcreteTypeDecl ["Boolean"] in Standard>
Expr: <RelationOp testop.adb:14:35-14:46>
  type:          <ConcreteTypeDecl ["Boolean"] in Standard>
  expected type: <ConcreteTypeDecl ["Boolean"] in Standard>
Expr: <ParenExpr testop.adb:14:35-14:42>
  type:          <ConcreteTypeDecl ["Integer"] in Standard>
  expected type: <ConcreteTypeDecl ["Integer"] in Standard>
Expr: <BinOp testop.adb:14:36-14:41>
  type:          <ConcreteTypeDecl ["Integer"] in Standard>
  expected type: <ConcreteTypeDecl ["Integer"] in Standard>
Expr: <Id "A" testop.adb:14:36-14:37>
  references:    <DefiningName "A" testop.adb:8:4-8:5>
  type:          <ConcreteTypeDecl ["Integer"] in Standard>
  expected type: <ConcreteTypeDecl ["Integer"] in Standard>
Expr: <OpPlus "+" testop.adb:14:38-14:39>
  references:    <DefiningName ""+"" testop.adb:5:13-5:16>
  type:          None
  expected type: None
Expr: <Id "B" testop.adb:14:40-14:41>
  references:    <DefiningName "B" testop.adb:8:7-8:8>
  type:          <ConcreteTypeDecl ["Integer"] in Standard>
  expected type: <ConcreteTypeDecl ["Integer"] in Standard>
Expr: <OpLt "<" testop.adb:14:43-14:44>
  references:    None
  type:          None
  expected type: None
Expr: <Id "C" testop.adb:14:45-14:46>
  references:    <DefiningName "C" testop.adb:8:10-8:11>
  type:          <ConcreteTypeDecl ["Integer"] in Standard>
  expected type: <ConcreteTypeDecl ["Integer"] in Standard>


Done.
