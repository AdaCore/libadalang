CompilationUnit[1:2-5:11]
|f_prelude:
|  AdaNodeList[1:2-1:2]: <empty list>
|f_body:
|  LibraryItem[1:2-5:11]
|  |f_has_private:
|  |  PrivateAbsent[1:2-1:2]
|  |f_item:
|  |  SubpBody[1:2-5:11]
|  |  |f_overriding:
|  |  |  OverridingUnspecified[1:2-1:2]
|  |  |f_subp_spec:
|  |  |  SubpSpec[1:2-1:35]
|  |  |  |f_subp_kind:
|  |  |  |  SubpKindProcedure[1:2-1:11]
|  |  |  |f_subp_name:
|  |  |  |  DefiningName[1:12-1:16]
|  |  |  |  |f_name:
|  |  |  |  |  Id[1:12-1:16]: Test
|  |  |  |f_subp_params:
|  |  |  |  Params[1:17-1:35]
|  |  |  |  |f_params:
|  |  |  |  |  ParamSpecList[1:18-1:34]
|  |  |  |  |  |  ParamSpec[1:18-1:25]
|  |  |  |  |  |  |f_ids:
|  |  |  |  |  |  |  DefiningNameList[1:18-1:19]
|  |  |  |  |  |  |  |  DefiningName[1:18-1:19]
|  |  |  |  |  |  |  |  |f_name:
|  |  |  |  |  |  |  |  |  Id[1:18-1:19]: A
|  |  |  |  |  |  |f_has_aliased:
|  |  |  |  |  |  |  AliasedAbsent[1:21-1:21]
|  |  |  |  |  |  |f_mode:
|  |  |  |  |  |  |  ModeDefault[1:21-1:21]
|  |  |  |  |  |  |f_type_expr:
|  |  |  |  |  |  |  SubtypeIndication[1:22-1:25]
|  |  |  |  |  |  |  |f_has_not_null:
|  |  |  |  |  |  |  |  NotNullAbsent[1:21-1:21]
|  |  |  |  |  |  |  |f_name:
|  |  |  |  |  |  |  |  Id[1:22-1:25]: Foo
|  |  |  |  |  |  |  |f_constraint: <null>
|  |  |  |  |  |  |f_default_expr: <null>
|  |  |  |  |  |  |f_aspects: <null>
|  |  |  |  |  |  ParamSpec[1:27-1:34]
|  |  |  |  |  |  |f_ids:
|  |  |  |  |  |  |  DefiningNameList[1:27-1:28]
|  |  |  |  |  |  |  |  DefiningName[1:27-1:28]
|  |  |  |  |  |  |  |  |f_name:
|  |  |  |  |  |  |  |  |  Id[1:27-1:28]: B
|  |  |  |  |  |  |f_has_aliased:
|  |  |  |  |  |  |  AliasedAbsent[1:30-1:30]
|  |  |  |  |  |  |f_mode:
|  |  |  |  |  |  |  ModeDefault[1:30-1:30]
|  |  |  |  |  |  |f_type_expr:
|  |  |  |  |  |  |  SubtypeIndication[1:31-1:34]
|  |  |  |  |  |  |  |f_has_not_null:
|  |  |  |  |  |  |  |  NotNullAbsent[1:30-1:30]
|  |  |  |  |  |  |  |f_name:
|  |  |  |  |  |  |  |  Id[1:31-1:34]: Bar
|  |  |  |  |  |  |  |f_constraint: <null>
|  |  |  |  |  |  |f_default_expr: <null>
|  |  |  |  |  |  |f_aspects: <null>
|  |  |  |f_subp_returns: <null>
|  |  |f_aspects: <null>
|  |  |f_decls:
|  |  |  DeclarativePart[1:38-1:39]
|  |  |  |f_decls:
|  |  |  |  AdaNodeList[1:38-1:38]: <empty list>
|  |  |f_stmts:
|  |  |  HandledStmts[1:44-5:2]
|  |  |  |f_stmts:
|  |  |  |  StmtList[2:6-4:15]
|  |  |  |  |  ForLoopStmt[2:6-4:15]
|  |  |  |  |  |f_spec:
|  |  |  |  |  |  ForLoopSpec[2:10-2:28]
|  |  |  |  |  |  |f_var_decl:
|  |  |  |  |  |  |  ForLoopVarDecl[2:10-2:23]
|  |  |  |  |  |  |  |f_id:
|  |  |  |  |  |  |  |  DefiningName[2:10-2:12]
|  |  |  |  |  |  |  |  |f_name:
|  |  |  |  |  |  |  |  |  Id[2:10-2:12]: El
|  |  |  |  |  |  |  |f_id_type:
|  |  |  |  |  |  |  |  SubtypeIndication[2:15-2:23]
|  |  |  |  |  |  |  |  |f_has_not_null:
|  |  |  |  |  |  |  |  |  NotNullAbsent[2:14-2:14]
|  |  |  |  |  |  |  |  |f_name:
|  |  |  |  |  |  |  |  |  Id[2:15-2:23]: Foo_Elem
|  |  |  |  |  |  |  |  |f_constraint: <null>
|  |  |  |  |  |  |f_loop_type:
|  |  |  |  |  |  |  IterTypeOf[2:24-2:26]
|  |  |  |  |  |  |f_has_reverse:
|  |  |  |  |  |  |  ReverseAbsent[2:26-2:26]
|  |  |  |  |  |  |f_iter_expr:
|  |  |  |  |  |  |  Id[2:27-2:28]: A
|  |  |  |  |  |  |f_iter_filter: <null>
|  |  |  |  |  |f_stmts:
|  |  |  |  |  |  StmtList[3:9-3:24]
|  |  |  |  |  |  |  CallStmt[3:9-3:24]
|  |  |  |  |  |  |  |f_call:
|  |  |  |  |  |  |  |  CallExpr[3:9-3:23]
|  |  |  |  |  |  |  |  |f_name:
|  |  |  |  |  |  |  |  |  DottedName[3:9-3:18]
|  |  |  |  |  |  |  |  |  |f_prefix:
|  |  |  |  |  |  |  |  |  |  Id[3:9-3:10]: B
|  |  |  |  |  |  |  |  |  |f_suffix:
|  |  |  |  |  |  |  |  |  |  Id[3:11-3:18]: RealBar
|  |  |  |  |  |  |  |  |f_suffix:
|  |  |  |  |  |  |  |  |  AssocList[3:20-3:22]
|  |  |  |  |  |  |  |  |  |  ParamAssoc[3:20-3:22]
|  |  |  |  |  |  |  |  |  |  |f_designator: <null>
|  |  |  |  |  |  |  |  |  |  |f_r_expr:
|  |  |  |  |  |  |  |  |  |  |  Id[3:20-3:22]: El
|  |  |  |  |  |f_end_name: <null>
|  |  |  |f_exceptions:
|  |  |  |  AdaNodeList[4:15-4:15]: <empty list>
|  |  |f_end_name:
|  |  |  EndName[5:6-5:10]
|  |  |  |f_name:
|  |  |  |  Id[5:6-5:10]: Test
|f_pragmas:
|  PragmaNodeList[5:11-5:11]: <empty list>
Done.
