type: bugfix
title: Fix static evaluation of range attributes

description: |

    Before this fix, static evaluation of range attributes on derived type
    definitions would not evaluate the constraints on the base type, only the
    explicit constraints on the derived type, such evaluating the range of type
    ``B`` in the following code would crash:

    .. code-block:: ada

        type A is range 1 .. 10;
        type B is new A;

    Similarly, subtypes would not be handled at all, so the evaluation of the
    range of any subtypes would crash.

    .. code-block:: ada

        type A is range 1 .. 10;
        subtype B is A;  --  CRASH
        subtype B is A range 1 .. 5;  --  CRASH


date: 2019-12-05
