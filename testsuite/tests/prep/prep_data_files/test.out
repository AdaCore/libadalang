== cannot-read-def-file.txt ==

LANGKIT_SUPPORT.ERRORS.FILE_READ_ERROR: no such file: no-such-file.txt

== invalid-def-1.txt ==

LANGKIT_SUPPORT.ERRORS.SYNTAX_ERROR: invalid-def-1.txt:1:11: for option -D: invalid preprocessing symbol name: 

== invalid-def-2.txt ==

LANGKIT_SUPPORT.ERRORS.SYNTAX_ERROR: invalid-def-2.txt:2:1: unterminated string literal

== invalid-def-3.txt ==

LANGKIT_SUPPORT.ERRORS.SYNTAX_ERROR: invalid-def-3.txt:1:3: for option -D: value is missing for X

== invalid-def-4.txt ==

LANGKIT_SUPPORT.ERRORS.SYNTAX_ERROR: invalid-def-4.txt:1:3: for option -D: value is missing for X

== invalid-def-5.txt ==

LANGKIT_SUPPORT.ERRORS.SYNTAX_ERROR: invalid-def-5.txt:1:3: for option -D: value is missing for X

== standard.txt ==

# default
  -b
  -s
  <none>

# "s01.adb"
  -b
  a -> Symbol(...)
  b -> Symbol(...)
  z -> Symbol(._._.)

# "s02.adb"
  -b
  -u
  a -> Symbol(...)
  b -> Symbol(...)
  z -> Symbol(._._.)

# "s03.adb"
  -b
  -u
  a -> Symbol(X)
  b -> Symbol(...)
  bee -> String("foo")
  cee -> String("foo""bar")
  z -> Symbol(._._.)

# "s04.adb"
  -b
  -u
  a -> Symbol(X)
  b -> Symbol(...)
  bee -> String("foo")
  cee -> String("foo""bar")
  z -> Symbol(._._.)

# "s05.adb"
  -b
  a -> Symbol(._.)
  b -> Symbol(...)
  c -> String("foo bar""")
  z -> Symbol(._._.)

# "s07.adb"
  -c
  empty -> <null>

# "s08.adb"
  -b
  <none>

# "s09.adb"
  -c
  <none>

# "s10.adb"
  -b
  -u
  <none>

# "s11.adb"
  <disabled>


== no-default.txt ==

# default
  <disabled>

# "s1.adb"
  <disabled>

# "s2.adb"
  -b
  a -> Symbol(1)


== unknown-switch.txt ==

LANGKIT_SUPPORT.ERRORS.SYNTAX_ERROR: unknown-switch.txt:1:11: invalid switch: -x

== no-such-file.txt ==

LANGKIT_SUPPORT.ERRORS.FILE_READ_ERROR: no such file: no-such-file.txt

== subdir/prep-data-1.txt ==

LANGKIT_SUPPORT.ERRORS.SYNTAX_ERROR: prep-data-1.txt:2:1: unterminated string literal

== subdir/prep-data-2.txt ==

LANGKIT_SUPPORT.ERRORS.SYNTAX_ERROR: prep-data-2.txt:1:1: Ada source filename expected

== subdir/prep-data-3.txt ==

LANGKIT_SUPPORT.ERRORS.SYNTAX_ERROR: invalid-def.txt:1:1: symbol expected

== subdir/no-such-file.txt ==

LANGKIT_SUPPORT.ERRORS.FILE_READ_ERROR: no such file: no-such-file.txt

Done.
