CompilationUnitList[1:1-17:11]
|  CompilationUnit[1:1-2:9]
|  |f_prelude:
|  |  AdaNodeList[1:1-1:1]: <empty list>
|  |f_body:
|  |  LibraryItem[1:1-2:9]
|  |  |f_has_private:
|  |  |  PrivateAbsent[1:1-1:1]
|  |  |f_item:
|  |  |  PackageDecl[1:1-2:9]
|  |  |  |f_package_name:
|  |  |  |  DefiningName[1:9-1:12]
|  |  |  |  |f_name:
|  |  |  |  |  Id[1:9-1:12]: Foo
|  |  |  |f_aspects: <null>
|  |  |  |f_public_part:
|  |  |  |  PublicPart[1:15-2:1]
|  |  |  |  |f_decls:
|  |  |  |  |  AdaNodeList[1:15-1:15]: <empty list>
|  |  |  |f_private_part: <null>
|  |  |  |f_end_name:
|  |  |  |  EndName[2:5-2:8]
|  |  |  |  |f_name:
|  |  |  |  |  Id[2:5-2:8]: Foo
|  |f_pragmas:
|  |  PragmaNodeList[2:9-2:9]: <empty list>
|  CompilationUnit[4:1-5:13]
|  |f_prelude:
|  |  AdaNodeList[2:9-2:9]: <empty list>
|  |f_body:
|  |  LibraryItem[4:1-5:13]
|  |  |f_has_private:
|  |  |  PrivateAbsent[2:9-2:9]
|  |  |f_item:
|  |  |  PackageDecl[4:1-5:13]
|  |  |  |f_package_name:
|  |  |  |  DefiningName[4:9-4:16]
|  |  |  |  |f_name:
|  |  |  |  |  DottedName[4:9-4:16]
|  |  |  |  |  |f_prefix:
|  |  |  |  |  |  Id[4:9-4:12]: Foo
|  |  |  |  |  |f_suffix:
|  |  |  |  |  |  Id[4:13-4:16]: Bar
|  |  |  |f_aspects: <null>
|  |  |  |f_public_part:
|  |  |  |  PublicPart[4:19-5:1]
|  |  |  |  |f_decls:
|  |  |  |  |  AdaNodeList[4:19-4:19]: <empty list>
|  |  |  |f_private_part: <null>
|  |  |  |f_end_name:
|  |  |  |  EndName[5:5-5:12]
|  |  |  |  |f_name:
|  |  |  |  |  DottedName[5:5-5:12]
|  |  |  |  |  |f_prefix:
|  |  |  |  |  |  Id[5:5-5:8]: Foo
|  |  |  |  |  |f_suffix:
|  |  |  |  |  |  Id[5:9-5:12]: Bar
|  |f_pragmas:
|  |  PragmaNodeList[5:13-5:13]: <empty list>
|  CompilationUnit[7:1-8:17]
|  |f_prelude:
|  |  AdaNodeList[5:13-5:13]: <empty list>
|  |f_body:
|  |  LibraryItem[7:1-8:17]
|  |  |f_has_private:
|  |  |  PrivateAbsent[5:13-5:13]
|  |  |f_item:
|  |  |  PackageDecl[7:1-8:17]
|  |  |  |f_package_name:
|  |  |  |  DefiningName[7:9-7:20]
|  |  |  |  |f_name:
|  |  |  |  |  DottedName[7:9-7:20]
|  |  |  |  |  |f_prefix:
|  |  |  |  |  |  DottedName[7:9-7:16]
|  |  |  |  |  |  |f_prefix:
|  |  |  |  |  |  |  Id[7:9-7:12]: Foo
|  |  |  |  |  |  |f_suffix:
|  |  |  |  |  |  |  Id[7:13-7:16]: Bar
|  |  |  |  |  |f_suffix:
|  |  |  |  |  |  Id[7:17-7:20]: Baz
|  |  |  |f_aspects: <null>
|  |  |  |f_public_part:
|  |  |  |  PublicPart[7:23-8:1]
|  |  |  |  |f_decls:
|  |  |  |  |  AdaNodeList[7:23-7:23]: <empty list>
|  |  |  |f_private_part: <null>
|  |  |  |f_end_name:
|  |  |  |  EndName[8:5-8:16]
|  |  |  |  |f_name:
|  |  |  |  |  DottedName[8:5-8:16]
|  |  |  |  |  |f_prefix:
|  |  |  |  |  |  DottedName[8:5-8:12]
|  |  |  |  |  |  |f_prefix:
|  |  |  |  |  |  |  Id[8:5-8:8]: Foo
|  |  |  |  |  |  |f_suffix:
|  |  |  |  |  |  |  Id[8:9-8:12]: Bar
|  |  |  |  |  |f_suffix:
|  |  |  |  |  |  Id[8:13-8:16]: Baz
|  |f_pragmas:
|  |  PragmaNodeList[8:17-8:17]: <empty list>
|  CompilationUnit[10:1-11:7]
|  |f_prelude:
|  |  AdaNodeList[8:17-8:17]: <empty list>
|  |f_body:
|  |  LibraryItem[10:1-11:7]
|  |  |f_has_private:
|  |  |  PrivateAbsent[8:17-8:17]
|  |  |f_item:
|  |  |  PackageDecl[10:1-11:7]
|  |  |  |f_package_name:
|  |  |  |  DefiningName[10:9-10:10]
|  |  |  |  |f_name:
|  |  |  |  |  Id[10:9-10:10]: A
|  |  |  |f_aspects: <null>
|  |  |  |f_public_part:
|  |  |  |  PublicPart[10:13-11:1]
|  |  |  |  |f_decls:
|  |  |  |  |  AdaNodeList[10:13-10:13]: <empty list>
|  |  |  |f_private_part: <null>
|  |  |  |f_end_name:
|  |  |  |  EndName[11:5-11:6]
|  |  |  |  |f_name:
|  |  |  |  |  Id[11:5-11:6]: A
|  |f_pragmas:
|  |  PragmaNodeList[11:7-11:7]: <empty list>
|  CompilationUnit[13:1-14:9]
|  |f_prelude:
|  |  AdaNodeList[11:7-11:7]: <empty list>
|  |f_body:
|  |  LibraryItem[13:1-14:9]
|  |  |f_has_private:
|  |  |  PrivateAbsent[11:7-11:7]
|  |  |f_item:
|  |  |  PackageDecl[13:1-14:9]
|  |  |  |f_package_name:
|  |  |  |  DefiningName[13:9-13:12]
|  |  |  |  |f_name:
|  |  |  |  |  DottedName[13:9-13:12]
|  |  |  |  |  |f_prefix:
|  |  |  |  |  |  Id[13:9-13:10]: A
|  |  |  |  |  |f_suffix:
|  |  |  |  |  |  Id[13:11-13:12]: B
|  |  |  |f_aspects: <null>
|  |  |  |f_public_part:
|  |  |  |  PublicPart[13:15-14:1]
|  |  |  |  |f_decls:
|  |  |  |  |  AdaNodeList[13:15-13:15]: <empty list>
|  |  |  |f_private_part: <null>
|  |  |  |f_end_name:
|  |  |  |  EndName[14:5-14:8]
|  |  |  |  |f_name:
|  |  |  |  |  DottedName[14:5-14:8]
|  |  |  |  |  |f_prefix:
|  |  |  |  |  |  Id[14:5-14:6]: A
|  |  |  |  |  |f_suffix:
|  |  |  |  |  |  Id[14:7-14:8]: B
|  |f_pragmas:
|  |  PragmaNodeList[14:9-14:9]: <empty list>
|  CompilationUnit[16:1-17:11]
|  |f_prelude:
|  |  AdaNodeList[14:9-14:9]: <empty list>
|  |f_body:
|  |  LibraryItem[16:1-17:11]
|  |  |f_has_private:
|  |  |  PrivateAbsent[14:9-14:9]
|  |  |f_item:
|  |  |  PackageDecl[16:1-17:11]
|  |  |  |f_package_name:
|  |  |  |  DefiningName[16:9-16:14]
|  |  |  |  |f_name:
|  |  |  |  |  DottedName[16:9-16:14]
|  |  |  |  |  |f_prefix:
|  |  |  |  |  |  DottedName[16:9-16:12]
|  |  |  |  |  |  |f_prefix:
|  |  |  |  |  |  |  Id[16:9-16:10]: A
|  |  |  |  |  |  |f_suffix:
|  |  |  |  |  |  |  Id[16:11-16:12]: B
|  |  |  |  |  |f_suffix:
|  |  |  |  |  |  Id[16:13-16:14]: C
|  |  |  |f_aspects: <null>
|  |  |  |f_public_part:
|  |  |  |  PublicPart[16:17-17:1]
|  |  |  |  |f_decls:
|  |  |  |  |  AdaNodeList[16:17-16:17]: <empty list>
|  |  |  |f_private_part: <null>
|  |  |  |f_end_name:
|  |  |  |  EndName[17:5-17:10]
|  |  |  |  |f_name:
|  |  |  |  |  DottedName[17:5-17:10]
|  |  |  |  |  |f_prefix:
|  |  |  |  |  |  DottedName[17:5-17:8]
|  |  |  |  |  |  |f_prefix:
|  |  |  |  |  |  |  Id[17:5-17:6]: A
|  |  |  |  |  |  |f_suffix:
|  |  |  |  |  |  |  Id[17:7-17:8]: B
|  |  |  |  |  |f_suffix:
|  |  |  |  |  |  Id[17:9-17:10]: C
|  |f_pragmas:
|  |  PragmaNodeList[17:11-17:11]: <empty list>

==== Dumping lexical environments ====
@1 = LexEnv(Static_Primary, Empty, Parent=null):
    <empty>

$root = LexEnv(Static_Primary, Parent=null):
    standard: [<PackageDecl ["Standard"] in Standard>]

@3 = LexEnv(Static_Primary, Parent=@2, Node=<PackageDecl ["Foo"] input:1:1-2:9>):
    bar: [<PackageDecl ["Foo.Bar"] input:4:1-5:13>]

@2 = LexEnv(Static_Primary, Parent=$root, Node=<PackageDecl ["Standard"] in Standard>):
    "&": [<SyntheticSubpDecl [""&""] in Standard>, <SyntheticSubpDecl [""&""] in Standard>, <SyntheticSubpDecl [""&""] in Standard>, <SyntheticSubpDecl [""&""] in Standard>, <SyntheticSubpDecl [""&""] in Standard>, <SyntheticSubpDecl [""&""] in Standard>, <SyntheticSubpDecl [""&""] in Standard>, <SyntheticSubpDecl [""&""] in Standard>, <SyntheticSubpDecl [""&""] in Standard>, <SyntheticSubpDecl [""&""] in Standard>, <SyntheticSubpDecl [""&""] in Standard>, <SyntheticSubpDecl [""&""] in Standard>]
    "*": [<SyntheticSubpDecl [""*""] in Standard>, <SyntheticSubpDecl [""*""] in Standard>, <SyntheticSubpDecl [""*""] in Standard>, <SyntheticSubpDecl [""*""] in Standard>, <SyntheticSubpDecl [""*""] in Standard>, <SyntheticSubpDecl [""*""] in Standard>, <SyntheticSubpDecl [""*""] in Standard>, <SyntheticSubpDecl [""*""] in Standard>, <SyntheticSubpDecl [""*""] in Standard>, <SyntheticSubpDecl [""*""] in Standard>, <SyntheticSubpDecl [""*""] in Standard>, <SyntheticSubpDecl [""*""] in Standard>, <SyntheticSubpDecl [""*""] in Standard>, <SyntheticSubpDecl [""*""] in Standard>]
    "**": [<SyntheticSubpDecl [""**""] in Standard>, <SyntheticSubpDecl [""**""] in Standard>, <SyntheticSubpDecl [""**""] in Standard>, <SyntheticSubpDecl [""**""] in Standard>, <SyntheticSubpDecl [""**""] in Standard>, <SyntheticSubpDecl [""**""] in Standard>, <SyntheticSubpDecl [""**""] in Standard>, <SyntheticSubpDecl [""**""] in Standard>, <SyntheticSubpDecl [""**""] in Standard>, <SyntheticSubpDecl [""**""] in Standard>, <SyntheticSubpDecl [""**""] in Standard>]
    "+": [<SyntheticSubpDecl [""+""] in Standard>, <SyntheticSubpDecl [""+""] in Standard>, <SyntheticSubpDecl [""+""] in Standard>, <SyntheticSubpDecl [""+""] in Standard>, <SyntheticSubpDecl [""+""] in Standard>, <SyntheticSubpDecl [""+""] in Standard>, <SyntheticSubpDecl [""+""] in Standard>, <SyntheticSubpDecl [""+""] in Standard>, <SyntheticSubpDecl [""+""] in Standard>, <SyntheticSubpDecl [""+""] in Standard>, <SyntheticSubpDecl [""+""] in Standard>, <SyntheticSubpDecl [""+""] in Standard>, <SyntheticSubpDecl [""+""] in Standard>, <SyntheticSubpDecl [""+""] in Standard>, <SyntheticSubpDecl [""+""] in Standard>, <SyntheticSubpDecl [""+""] in Standard>, <SyntheticSubpDecl [""+""] in Standard>, <SyntheticSubpDecl [""+""] in Standard>, <SyntheticSubpDecl [""+""] in Standard>, <SyntheticSubpDecl [""+""] in Standard>, <SyntheticSubpDecl [""+""] in Standard>, <SyntheticSubpDecl [""+""] in Standard>]
    "-": [<SyntheticSubpDecl [""-""] in Standard>, <SyntheticSubpDecl [""-""] in Standard>, <SyntheticSubpDecl [""-""] in Standard>, <SyntheticSubpDecl [""-""] in Standard>, <SyntheticSubpDecl [""-""] in Standard>, <SyntheticSubpDecl [""-""] in Standard>, <SyntheticSubpDecl [""-""] in Standard>, <SyntheticSubpDecl [""-""] in Standard>, <SyntheticSubpDecl [""-""] in Standard>, <SyntheticSubpDecl [""-""] in Standard>, <SyntheticSubpDecl [""-""] in Standard>, <SyntheticSubpDecl [""-""] in Standard>, <SyntheticSubpDecl [""-""] in Standard>, <SyntheticSubpDecl [""-""] in Standard>, <SyntheticSubpDecl [""-""] in Standard>, <SyntheticSubpDecl [""-""] in Standard>, <SyntheticSubpDecl [""-""] in Standard>, <SyntheticSubpDecl [""-""] in Standard>, <SyntheticSubpDecl [""-""] in Standard>, <SyntheticSubpDecl [""-""] in Standard>, <SyntheticSubpDecl [""-""] in Standard>, <SyntheticSubpDecl [""-""] in Standard>]
    "/": [<SyntheticSubpDecl [""/""] in Standard>, <SyntheticSubpDecl [""/""] in Standard>, <SyntheticSubpDecl [""/""] in Standard>, <SyntheticSubpDecl [""/""] in Standard>, <SyntheticSubpDecl [""/""] in Standard>, <SyntheticSubpDecl [""/""] in Standard>, <SyntheticSubpDecl [""/""] in Standard>, <SyntheticSubpDecl [""/""] in Standard>, <SyntheticSubpDecl [""/""] in Standard>, <SyntheticSubpDecl [""/""] in Standard>, <SyntheticSubpDecl [""/""] in Standard>, <SyntheticSubpDecl [""/""] in Standard>, <SyntheticSubpDecl [""/""] in Standard>]
    "/=": [<SyntheticSubpDecl [""/=""] in Standard>, <SyntheticSubpDecl [""/=""] in Standard>, <SyntheticSubpDecl [""/=""] in Standard>, <SyntheticSubpDecl [""/=""] in Standard>, <SyntheticSubpDecl [""/=""] in Standard>, <SyntheticSubpDecl [""/=""] in Standard>, <SyntheticSubpDecl [""/=""] in Standard>, <SyntheticSubpDecl [""/=""] in Standard>, <SyntheticSubpDecl [""/=""] in Standard>, <SyntheticSubpDecl [""/=""] in Standard>, <SyntheticSubpDecl [""/=""] in Standard>, <SyntheticSubpDecl [""/=""] in Standard>, <SyntheticSubpDecl [""/=""] in Standard>, <SyntheticSubpDecl [""/=""] in Standard>, <SyntheticSubpDecl [""/=""] in Standard>, <SyntheticSubpDecl [""/=""] in Standard>, <SyntheticSubpDecl [""/=""] in Standard>, <SyntheticSubpDecl [""/=""] in Standard>]
    "<": [<SyntheticSubpDecl [""<""] in Standard>, <SyntheticSubpDecl [""<""] in Standard>, <SyntheticSubpDecl [""<""] in Standard>, <SyntheticSubpDecl [""<""] in Standard>, <SyntheticSubpDecl [""<""] in Standard>, <SyntheticSubpDecl [""<""] in Standard>, <SyntheticSubpDecl [""<""] in Standard>, <SyntheticSubpDecl [""<""] in Standard>, <SyntheticSubpDecl [""<""] in Standard>, <SyntheticSubpDecl [""<""] in Standard>, <SyntheticSubpDecl [""<""] in Standard>, <SyntheticSubpDecl [""<""] in Standard>, <SyntheticSubpDecl [""<""] in Standard>, <SyntheticSubpDecl [""<""] in Standard>, <SyntheticSubpDecl [""<""] in Standard>, <SyntheticSubpDecl [""<""] in Standard>, <SyntheticSubpDecl [""<""] in Standard>, <SyntheticSubpDecl [""<""] in Standard>]
    "<=": [<SyntheticSubpDecl [""<=""] in Standard>, <SyntheticSubpDecl [""<=""] in Standard>, <SyntheticSubpDecl [""<=""] in Standard>, <SyntheticSubpDecl [""<=""] in Standard>, <SyntheticSubpDecl [""<=""] in Standard>, <SyntheticSubpDecl [""<=""] in Standard>, <SyntheticSubpDecl [""<=""] in Standard>, <SyntheticSubpDecl [""<=""] in Standard>, <SyntheticSubpDecl [""<=""] in Standard>, <SyntheticSubpDecl [""<=""] in Standard>, <SyntheticSubpDecl [""<=""] in Standard>, <SyntheticSubpDecl [""<=""] in Standard>, <SyntheticSubpDecl [""<=""] in Standard>, <SyntheticSubpDecl [""<=""] in Standard>, <SyntheticSubpDecl [""<=""] in Standard>, <SyntheticSubpDecl [""<=""] in Standard>, <SyntheticSubpDecl [""<=""] in Standard>, <SyntheticSubpDecl [""<=""] in Standard>]
    "=": [<SyntheticSubpDecl [""=""] in Standard>, <SyntheticSubpDecl [""=""] in Standard>, <SyntheticSubpDecl [""=""] in Standard>, <SyntheticSubpDecl [""=""] in Standard>, <SyntheticSubpDecl [""=""] in Standard>, <SyntheticSubpDecl [""=""] in Standard>, <SyntheticSubpDecl [""=""] in Standard>, <SyntheticSubpDecl [""=""] in Standard>, <SyntheticSubpDecl [""=""] in Standard>, <SyntheticSubpDecl [""=""] in Standard>, <SyntheticSubpDecl [""=""] in Standard>, <SyntheticSubpDecl [""=""] in Standard>, <SyntheticSubpDecl [""=""] in Standard>, <SyntheticSubpDecl [""=""] in Standard>, <SyntheticSubpDecl [""=""] in Standard>, <SyntheticSubpDecl [""=""] in Standard>, <SyntheticSubpDecl [""=""] in Standard>, <SyntheticSubpDecl [""=""] in Standard>]
    ">": [<SyntheticSubpDecl ["">""] in Standard>, <SyntheticSubpDecl ["">""] in Standard>, <SyntheticSubpDecl ["">""] in Standard>, <SyntheticSubpDecl ["">""] in Standard>, <SyntheticSubpDecl ["">""] in Standard>, <SyntheticSubpDecl ["">""] in Standard>, <SyntheticSubpDecl ["">""] in Standard>, <SyntheticSubpDecl ["">""] in Standard>, <SyntheticSubpDecl ["">""] in Standard>, <SyntheticSubpDecl ["">""] in Standard>, <SyntheticSubpDecl ["">""] in Standard>, <SyntheticSubpDecl ["">""] in Standard>, <SyntheticSubpDecl ["">""] in Standard>, <SyntheticSubpDecl ["">""] in Standard>, <SyntheticSubpDecl ["">""] in Standard>, <SyntheticSubpDecl ["">""] in Standard>, <SyntheticSubpDecl ["">""] in Standard>, <SyntheticSubpDecl ["">""] in Standard>]
    ">=": [<SyntheticSubpDecl ["">=""] in Standard>, <SyntheticSubpDecl ["">=""] in Standard>, <SyntheticSubpDecl ["">=""] in Standard>, <SyntheticSubpDecl ["">=""] in Standard>, <SyntheticSubpDecl ["">=""] in Standard>, <SyntheticSubpDecl ["">=""] in Standard>, <SyntheticSubpDecl ["">=""] in Standard>, <SyntheticSubpDecl ["">=""] in Standard>, <SyntheticSubpDecl ["">=""] in Standard>, <SyntheticSubpDecl ["">=""] in Standard>, <SyntheticSubpDecl ["">=""] in Standard>, <SyntheticSubpDecl ["">=""] in Standard>, <SyntheticSubpDecl ["">=""] in Standard>, <SyntheticSubpDecl ["">=""] in Standard>, <SyntheticSubpDecl ["">=""] in Standard>, <SyntheticSubpDecl ["">=""] in Standard>, <SyntheticSubpDecl ["">=""] in Standard>, <SyntheticSubpDecl ["">=""] in Standard>]
    "abs": [<SyntheticSubpDecl [""abs""] in Standard>, <SyntheticSubpDecl [""abs""] in Standard>, <SyntheticSubpDecl [""abs""] in Standard>, <SyntheticSubpDecl [""abs""] in Standard>, <SyntheticSubpDecl [""abs""] in Standard>, <SyntheticSubpDecl [""abs""] in Standard>, <SyntheticSubpDecl [""abs""] in Standard>, <SyntheticSubpDecl [""abs""] in Standard>, <SyntheticSubpDecl [""abs""] in Standard>, <SyntheticSubpDecl [""abs""] in Standard>, <SyntheticSubpDecl [""abs""] in Standard>]
    "and": [<SyntheticSubpDecl [""and""] in Standard>, <SyntheticSubpDecl [""and""] in Standard>, <SyntheticSubpDecl [""and""] in Standard>, <SyntheticSubpDecl [""and""] in Standard>]
    "mod": [<SyntheticSubpDecl [""mod""] in Standard>, <SyntheticSubpDecl [""mod""] in Standard>, <SyntheticSubpDecl [""mod""] in Standard>, <SyntheticSubpDecl [""mod""] in Standard>, <SyntheticSubpDecl [""mod""] in Standard>, <SyntheticSubpDecl [""mod""] in Standard>]
    "not": [<SyntheticSubpDecl [""not""] in Standard>, <SyntheticSubpDecl [""not""] in Standard>, <SyntheticSubpDecl [""not""] in Standard>, <SyntheticSubpDecl [""not""] in Standard>]
    "or": [<SyntheticSubpDecl [""or""] in Standard>, <SyntheticSubpDecl [""or""] in Standard>, <SyntheticSubpDecl [""or""] in Standard>, <SyntheticSubpDecl [""or""] in Standard>]
    "rem": [<SyntheticSubpDecl [""rem""] in Standard>, <SyntheticSubpDecl [""rem""] in Standard>, <SyntheticSubpDecl [""rem""] in Standard>, <SyntheticSubpDecl [""rem""] in Standard>, <SyntheticSubpDecl [""rem""] in Standard>, <SyntheticSubpDecl [""rem""] in Standard>]
    "xor": [<SyntheticSubpDecl [""xor""] in Standard>, <SyntheticSubpDecl [""xor""] in Standard>, <SyntheticSubpDecl [""xor""] in Standard>, <SyntheticSubpDecl [""xor""] in Standard>]
    'A': [<EnumLiteralDecl ["'A'"] in Standard>, <EnumLiteralDecl ["'A'"] in Standard>, <EnumLiteralDecl ["'A'"] in Standard>]
    a: [<PackageDecl ["A"] input:10:1-11:7>]
    abort_signal_: [<ExceptionDecl ["Abort_Signal_"] in Standard>]
    ascii: [<PackageDecl ["ASCII"] in Standard>]
    boolean: [<ConcreteTypeDecl ["Boolean"] in Standard>]
    character: [<ConcreteTypeDecl ["Character"] in Standard>]
    constraint_error: [<ExceptionDecl ["Constraint_Error"] in Standard>]
    duration: [<ConcreteTypeDecl ["Duration"] in Standard>]
    false: [<EnumLiteralDecl ["False"] in Standard>]
    float: [<ConcreteTypeDecl ["Float"] in Standard>]
    foo: [<PackageDecl ["Foo"] input:1:1-2:9>]
    integer: [<ConcreteTypeDecl ["Integer"] in Standard>]
    long_float: [<ConcreteTypeDecl ["Long_Float"] in Standard>]
    long_integer: [<ConcreteTypeDecl ["Long_Integer"] in Standard>]
    long_long_float: [<ConcreteTypeDecl ["Long_Long_Float"] in Standard>]
    long_long_integer: [<ConcreteTypeDecl ["Long_Long_Integer"] in Standard>]
    long_long_long_integer: [<ConcreteTypeDecl ["Long_Long_Long_Integer"] in Standard>]
    natural: [<SubtypeDecl ["Natural"] in Standard>]
    numeric_error: [<ExceptionDecl ["Numeric_Error"] in Standard>]
    positive: [<SubtypeDecl ["Positive"] in Standard>]
    program_error: [<ExceptionDecl ["Program_Error"] in Standard>]
    root_types_: [<PackageDecl ["root_types_"] in Standard>]
    short_float: [<ConcreteTypeDecl ["Short_Float"] in Standard>]
    short_integer: [<ConcreteTypeDecl ["Short_Integer"] in Standard>]
    short_short_integer: [<ConcreteTypeDecl ["Short_Short_Integer"] in Standard>]
    storage_error: [<ExceptionDecl ["Storage_Error"] in Standard>]
    string: [<ConcreteTypeDecl ["String"] in Standard>]
    tasking_error: [<ExceptionDecl ["Tasking_Error"] in Standard>]
    true: [<EnumLiteralDecl ["True"] in Standard>]
    universal_fixed_type_: [<ConcreteTypeDecl ["Universal_Fixed_Type_"] in Standard>]
    universal_int_type_: [<ConcreteTypeDecl ["Universal_Int_Type_"] in Standard>]
    universal_real_type_: [<ConcreteTypeDecl ["Universal_Real_Type_"] in Standard>]
    wide_character: [<ConcreteTypeDecl ["Wide_Character"] in Standard>]
    wide_string: [<ConcreteTypeDecl ["Wide_String"] in Standard>]
    wide_wide_character: [<ConcreteTypeDecl ["Wide_Wide_Character"] in Standard>]
    wide_wide_string: [<ConcreteTypeDecl ["Wide_Wide_String"] in Standard>]

$root = LexEnv(Static_Primary, Parent=null):
    standard: [<PackageDecl ["Standard"] in Standard>]

@4 = LexEnv(Static_Primary, Parent=@3, Node=<PackageDecl ["Foo.Bar"] input:4:1-5:13>):
    baz: [<PackageDecl ["Foo.Bar.Baz"] input:7:1-8:17>]

@5 = LexEnv(Static_Primary, Parent=@4, Node=<PackageDecl ["Foo.Bar.Baz"] input:7:1-8:17>):
    <empty>

@6 = LexEnv(Static_Primary, Parent=@2, Node=<PackageDecl ["A"] input:10:1-11:7>):
    b: [<PackageDecl ["A.B"] input:13:1-14:9>]

@7 = LexEnv(Static_Primary, Parent=@6, Node=<PackageDecl ["A.B"] input:13:1-14:9>):
    c: [<PackageDecl ["A.B.C"] input:16:1-17:11>]

@8 = LexEnv(Static_Primary, Parent=@7, Node=<PackageDecl ["A.B.C"] input:16:1-17:11>):
    <empty>

