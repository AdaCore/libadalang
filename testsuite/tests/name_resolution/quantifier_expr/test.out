Analyzing test.adb
##################

Resolving xrefs for node <ReturnStmt test.adb:6:7-8:37>
*******************************************************

Expr: <BinOp test.adb:7:9-8:36>
  type:          <ConcreteTypeDecl ["Boolean"] __standard:3:3-3:33>
  expected type: <ConcreteTypeDecl ["Boolean"] __standard:3:3-3:33>
Expr: <ParenExpr test.adb:7:9-7:45>
  type:          <ConcreteTypeDecl ["Boolean"] __standard:3:3-3:33>
  expected type: <ConcreteTypeDecl ["Boolean"] __standard:3:3-3:33>
Expr: <QuantifiedExpr test.adb:7:10-7:44>
  type:          <ConcreteTypeDecl ["Boolean"] __standard:3:3-3:33>
  expected type: <ConcreteTypeDecl ["Boolean"] __standard:3:3-3:33>
Expr: <RelationOp test.adb:7:35-7:44>
  type:          <ConcreteTypeDecl ["Boolean"] __standard:3:3-3:33>
  expected type: <ConcreteTypeDecl ["Boolean"] __standard:3:3-3:33>
Expr: <CallExpr test.adb:7:35-7:40>
  references:    <DefiningName "S1" test.adb:4:18-4:20>
  type:          <ConcreteTypeDecl ["Integer"] __standard:4:3-4:54>
  expected type: <ConcreteTypeDecl ["Integer"] __standard:4:3-4:54>
Expr: <Id "S1" test.adb:7:35-7:37>
  references:    <DefiningName "S1" test.adb:4:18-4:20>
  type:          <ConcreteTypeDecl ["Sequence"] test.adb:2:4-2:57>
  expected type: None
Expr: <Id "K" test.adb:7:38-7:39>
  references:    <DefiningName "K" test.adb:7:18-7:19>
  type:          <SubtypeDecl ["Natural"] __standard:5:3-5:57>
  expected type: <SubtypeDecl ["Natural"] __standard:5:3-5:57>
Expr: <OpGt ">" test.adb:7:41-7:42>
  references:    None
  type:          None
  expected type: None
Expr: <Int test.adb:7:43-7:44>
  references:    None
  type:          <ConcreteTypeDecl ["Universal_Int_Type_"] __standard:116:3-116:45>
  expected type: <ConcreteTypeDecl ["Integer"] __standard:4:3-4:54>
Expr: <OpAndThen "and then" test.adb:7:46-7:54>
  references:    None
  type:          None
  expected type: None
Expr: <ParenExpr test.adb:8:9-8:36>
  type:          <ConcreteTypeDecl ["Boolean"] __standard:3:3-3:33>
  expected type: <ConcreteTypeDecl ["Boolean"] __standard:3:3-3:33>
Expr: <QuantifiedExpr test.adb:8:10-8:35>
  type:          <ConcreteTypeDecl ["Boolean"] __standard:3:3-3:33>
  expected type: <ConcreteTypeDecl ["Boolean"] __standard:3:3-3:33>
Expr: <RelationOp test.adb:8:30-8:35>
  type:          <ConcreteTypeDecl ["Boolean"] __standard:3:3-3:33>
  expected type: <ConcreteTypeDecl ["Boolean"] __standard:3:3-3:33>
Expr: <Id "E" test.adb:8:30-8:31>
  references:    <DefiningName "E" test.adb:8:19-8:20>
  type:          <ConcreteTypeDecl ["Integer"] __standard:4:3-4:54>
  expected type: <ConcreteTypeDecl ["Integer"] __standard:4:3-4:54>
Expr: <OpLt "<" test.adb:8:32-8:33>
  references:    None
  type:          None
  expected type: None
Expr: <Int test.adb:8:34-8:35>
  references:    None
  type:          <ConcreteTypeDecl ["Universal_Int_Type_"] __standard:116:3-116:45>
  expected type: <ConcreteTypeDecl ["Integer"] __standard:4:3-4:54>

Resolving xrefs for node <AssignStmt test.adb:19:7-19:18>
*********************************************************

Expr: <Id "E" test.adb:19:7-19:8>
  references:    <DefiningName "E" test.adb:13:7-13:8>
  type:          <ConcreteTypeDecl ["Integer"] __standard:4:3-4:54>
  expected type: None
Expr: <BinOp test.adb:19:12-19:17>
  type:          <ConcreteTypeDecl ["Integer"] __standard:4:3-4:54>
  expected type: <ConcreteTypeDecl ["Integer"] __standard:4:3-4:54>
Expr: <Id "E" test.adb:19:12-19:13>
  references:    <DefiningName "E" test.adb:13:7-13:8>
  type:          <ConcreteTypeDecl ["Integer"] __standard:4:3-4:54>
  expected type: <ConcreteTypeDecl ["Integer"] __standard:4:3-4:54>
Expr: <OpPlus "+" test.adb:19:14-19:15>
  references:    None
  type:          None
  expected type: None
Expr: <Int test.adb:19:16-19:17>
  references:    None
  type:          <ConcreteTypeDecl ["Universal_Int_Type_"] __standard:116:3-116:45>
  expected type: <ConcreteTypeDecl ["Integer"] __standard:4:3-4:54>


Done.
